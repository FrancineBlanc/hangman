/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hangman;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Random;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws IOException {
        WordChooser wordChooser = new WordChooser();
        Masker masker = new Masker();

        System.out.println("Enter name for player 1:");
        BufferedReader nameReader1 = new BufferedReader(new InputStreamReader(System.in));
        String name1 = nameReader1.readLine();

        System.out.println("Enter name for player 2:");
        BufferedReader nameReader2 = new BufferedReader(new InputStreamReader(System.in));
        String name2 = nameReader2.readLine();

        Hangman game1 = new Hangman(name1, wordChooser, masker);
        Hangman game2 = new Hangman(name2, wordChooser, masker);
        Hangman[] hangmanArray = {game1, game2};

        int randomIndex = new Random().nextInt(hangmanArray.length);
        Hangman startingPlayer = hangmanArray[randomIndex];

        Hangman player1;
        Hangman player2;

        if (startingPlayer.equals(game1)) {
            player1 = game1;
            player2 = game2;
        } else {
            player1 = game2;
            player2 = game1;
        }

        String firstPlayerWordToGuess = player1.getWordToGuess();
        String secondPlayerWordToGuess = player2.getWordToGuess();

        System.out.printf("Welcome! Today the word to guess is:\n%s: %s\n%s: %s\n", player1.getPlayerName(),
                firstPlayerWordToGuess, player2.getPlayerName(), secondPlayerWordToGuess);

        int firstPlayerRemainingAttempts = player1.getRemainingAttempts();
        int secondPlayerRemainingAttempts = player2.getRemainingAttempts();


        while (firstPlayerRemainingAttempts > 0 && firstPlayerWordToGuess.indexOf('_') !=-1 && secondPlayerRemainingAttempts > 0 && secondPlayerWordToGuess.indexOf('_') != -1) {
            System.out.println(player1.getPlayerName() + ": Enter one letter to guess (" + firstPlayerRemainingAttempts +
                    ") " +
                    "remaining:");

            BufferedReader player1Reader = new BufferedReader(new InputStreamReader(System.in));
            Character player1Guess = player1Reader.readLine().toUpperCase().charAt(0);

            if (player1.guessLetter(player1Guess)) {
                System.out.println("Right!");
                firstPlayerWordToGuess = player1.getWordToGuess();
            } else {
                System.out.println("Wrong...");
            }
            System.out.println(firstPlayerWordToGuess + "\n");
            firstPlayerRemainingAttempts = player1.getRemainingAttempts();

            if (player1.isGameLost()) {
                System.out.println(player1.getPlayerName() + " lost!");
                break;
            }

            if (player1.isGameWon()) {
                System.out.println(player1.getPlayerName() + " won!");
                break;
            }

            System.out.println(player2.getPlayerName() + ": Enter one letter to guess (" + secondPlayerRemainingAttempts +
                    ") " +
                    "remaining" +
                    ":");

            BufferedReader player2Reader = new BufferedReader(new InputStreamReader(System.in));
            Character player2Guess = player2Reader.readLine().toUpperCase().charAt(0);

            if (player2.guessLetter(player2Guess)) {
                System.out.println("Right!");
                secondPlayerWordToGuess = player2.getWordToGuess();
            } else {
                System.out.println("Wrong...");
            }
            System.out.println(secondPlayerWordToGuess + "\n");
            secondPlayerRemainingAttempts = player2.getRemainingAttempts();

            if (player2.isGameLost()) {
                System.out.println(player2.getPlayerName() + " lost!");
                break;
            }

            if (player2.isGameWon()) {
                System.out.println(player2.getPlayerName() + " won!");
                break;
            }
        }
    }
}
